name: Build Catbuntu From Scratch

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-from-scratch:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap \
          squashfs-tools \
          xorriso \
          grub-pc-bin \
          grub-efi-amd64-bin \
          grub-common \
          mtools \
          dosfstools \
          git \
          isolinux \
          genisoimage \
          live-boot \
          systemd-container
          
    - name: Build minimal root filesystem
      run: |
        # Create minimal Ubuntu base WITH kernel (without live-boot)
        sudo debootstrap --include=linux-image-generic,initramfs-tools,systemd-sysv jammy ./catbuntu-root http://archive.ubuntu.com/ubuntu/
        
    - name: Setup system and cat packages
      run: |
        set -e
        sudo chroot ./catbuntu-root /bin/bash << 'EOL'
        set -e
        # Mount necessary filesystems
        mount -t proc proc /proc || true
        mount -t sysfs sys /sys || true
        mount -t devtmpfs dev /dev || true
        
        # Configure repositories WITH universe
        cat > /etc/apt/sources.list << 'EOF2'
        deb http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse
        deb http://archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
        deb http://archive.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
        EOF2
        
        # Update and install core system + live-boot FROM UNIVERSE
        apt-get update
        apt-get install -y sudo systemd systemd-sysv netbase ifupdown dbus
        apt-get install -y --no-install-recommends live-boot live-tools
        
        # Install cat packages - CAREFULLY ordered
        apt-get install -y --no-install-recommends \
          bash \
          coreutils \
          util-linux \
          udev \
          network-manager \
          curl \
          wget \
          vim-tiny \
          less
        
        # Now install fun cat packages
        apt-get install -y --no-install-recommends \
          fish \
          tmux \
          htop \
          neofetch \
          cmatrix \
          nyancat \
          oneko \
          sl \
          cowsay \
          fortune-mod \
          figlet \
          lolcat
        
        # CRITICAL: Configure live-boot
        echo "live-boot" > /etc/hostname
        echo "LIVE_BOOT=1" >> /etc/environment
        
        # FIX INITRAMFS - add necessary modules
        cat > /etc/initramfs-tools/modules << 'EOF2'
        squashfs
        overlay
        iso9660
        loop
        fat
        nls_cp437
        nls_iso8859-1
        vfat
        ext4
        EOF2
        
        # Create user
        useradd -m -s /usr/bin/fish catuser
        echo "catuser:password" | chpasswd
        usermod -aG sudo catuser
        echo "catbuntu" > /etc/hostname
        
        # Simple welcome script (NO auto-exec)
        cat > /home/catuser/welcome.sh << 'EOF2'
        #!/bin/bash
        echo "🐱 WELCOME TO CATBUNTU! 🐱"
        echo "The purr-fect terminal-only distro!"
        echo ""
        echo "Try: neofetch, cmatrix, nyancat, oneko, sl"
        echo "Shell: fish (type 'fish' to start)"
        EOF2
        chmod +x /home/catuser/welcome.sh
        
        # Update initramfs
        echo "Updating initramfs..."
        update-initramfs -v -u -k all
        
        # Clean up
        apt-get clean
        rm -rf /var/lib/apt/lists/*
        
        # Unmount
        umount /proc || true
        umount /sys || true
        umount /dev || true
        EOL
        
    - name: Create bootable ISO structure
      run: |
        set -e
        mkdir -p iso/boot/grub
        mkdir -p iso/live
        
        KERNEL_VERSION=$(sudo ls catbuntu-root/boot/vmlinuz-* | head -1 | xargs basename | sed 's/vmlinuz-//')
        echo "Using kernel: $KERNEL_VERSION"
        
        sudo cp catbuntu-root/boot/vmlinuz-$KERNEL_VERSION iso/boot/vmlinuz
        sudo cp catbuntu-root/boot/initrd.img-$KERNEL_VERSION iso/boot/initrd.img
        sudo chown $USER:$USER iso/boot/vmlinuz
        sudo chown $USER:$USER iso/boot/initrd.img
        
        # GRUB config with live-boot parameters
        cat > iso/boot/grub/grub.cfg << 'EOF'
        set timeout=5
        set default=0
        
        menuentry "Catbuntu From Scratch - Live" {
            linux /boot/vmlinuz boot=live components toram ignore_uuid debug nosplash console=tty1
            initrd /boot/initrd.img
        }
        EOF
        
    - name: Create squashfs and ISO
      run: |
        set -e
        sudo mksquashfs catbuntu-root iso/live/filesystem.squashfs -comp xz
        sudo chown $USER:$USER iso/live/filesystem.squashfs
        
        grub-mkrescue -o catbuntu-from-scratch.iso iso/ -- -volid "CATBUNTU"
          
    - name: Upload Catbuntu ISO
      uses: actions/upload-artifact@v4
      with:
        name: catbuntu-from-scratch
        path: catbuntu-from-scratch.iso
        retention-days: 3
        
    - name: Build success message
      run: |
        echo "🎉 CATBUNTU WITH LIVE-BOOT BUILT! 🐾"
        echo "📦 ISO size: $(ls -lh catbuntu-from-scratch.iso | awk '{print $5}')"
        echo "🐱 All cat packages included!"
        echo "🔧 Proper live-boot configuration"
        echo "📥 Download from Actions artifacts!"
