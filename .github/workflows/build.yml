name: Build Catbuntu From Scratch

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-from-scratch:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap \
          squashfs-tools \
          xorriso \
          grub-pc-bin \
          grub-efi-amd64-bin \
          grub-common \
          mtools \
          dosfstools \
          git \
          isolinux \
          genisoimage \
          live-boot \
          systemd-container
          
    - name: Build minimal root filesystem
      run: |
        # Create minimal Ubuntu base WITH kernel
        sudo debootstrap --include=linux-image-generic,initramfs-tools,systemd-sysv jammy ./catbuntu-root http://archive.ubuntu.com/ubuntu/
        
    - name: Setup system and install cat tools
      run: |
        set -e  # Fail on any error
        sudo chroot ./catbuntu-root /bin/bash << 'EOL'
        set -e
        # Mount necessary filesystems
        mount -t proc proc /proc || true
        mount -t sysfs sys /sys || true
        mount -t devtmpfs dev /dev || true
        
        # Install our cat packages
        apt-get update
        apt-get install -y --no-install-recommends \
          sudo \
          network-manager \
          curl \
          wget \
          vim-tiny \
          git \
          fish \
          tmux \
          htop \
          neofetch \
          cmatrix \
          nyancat \
          oneko \
          sl \
          cowsay \
          fortune-mod \
          figlet \
          lolcat
        
        # Create user
        useradd -m -s /usr/bin/fish catuser
        echo "catuser:password" | chpasswd
        usermod -aG sudo catuser
        echo "catbuntu" > /etc/hostname
        
        # Set up auto-login on tty1
        mkdir -p /etc/systemd/system/getty@tty1.service.d/
        cat > /etc/systemd/system/getty@tty1.service.d/override.conf << 'EOF2'
        [Service]
        ExecStart=
        ExecStart=-/sbin/agetty --autologin catuser --noclear %I $TERM
        EOF2
        
        # Create welcome script
        cat > /etc/profile.d/catbuntu-welcome.sh << 'EOF2'
        #!/bin/bash
        if [ "$(tty)" = "/dev/tty1" ]; then
          clear
          echo "🐱 WELCOME TO CATBUNTU! 🐱" | lolcat
          echo "The purr-fect terminal-only distro!" | cowsay -f cat | lolcat
          echo ""
          echo "Try: neofetch, cmatrix, nyancat, oneko, sl"
          echo "Shell: fish (type 'fish' to start)"
          echo ""
          exec fish
        fi
        EOF2
        chmod +x /etc/profile.d/catbuntu-welcome.sh
        
        # Update initramfs
        update-initramfs -u -k all
        
        # Clean up
        apt-get clean
        rm -rf /var/lib/apt/lists/*
        
        # Unmount
        umount /proc || true
        umount /sys || true
        umount /dev || true
        EOL
        
    - name: Create bootable ISO structure
      run: |
        set -e
        # Create ISO directory structure
        mkdir -p iso/boot/grub
        mkdir -p iso/live
        
        # Find and copy kernel files
        KERNEL_VERSION=$(sudo ls catbuntu-root/boot/vmlinuz-* | head -1 | xargs basename | sed 's/vmlinuz-//')
        echo "Using kernel: $KERNEL_VERSION"
        
        # Copy files with proper ownership
        sudo cp catbuntu-root/boot/vmlinuz-$KERNEL_VERSION iso/boot/vmlinuz
        sudo cp catbuntu-root/boot/initrd.img-$KERNEL_VERSION iso/boot/initrd.img
        sudo chown $USER:$USER iso/boot/vmlinuz
        sudo chown $USER:$USER iso/boot/initrd.img
        
        # Create GRUB config for LIVE boot
        cat > iso/boot/grub/grub.cfg << 'EOF'
        set timeout=5
        set default=0
        
        menuentry "Catbuntu From Scratch - Live" {
            linux /boot/vmlinuz boot=live components quiet splash
            initrd /boot/initrd.img
        }
        EOF
        
    - name: Create squashfs and ISO
      run: |
        set -e
        # Create compressed filesystem in live directory
        sudo mksquashfs catbuntu-root iso/live/filesystem.squashfs -comp xz
        sudo chown $USER:$USER iso/live/filesystem.squashfs
        
        # Create ISO
        grub-mkrescue -o catbuntu-from-scratch.iso iso/ -- -volid "CATBUNTU"
          
    - name: Upload Catbuntu ISO
      uses: actions/upload-artifact@v4
      with:
        name: catbuntu-from-scratch
        path: catbuntu-from-scratch.iso
        retention-days: 3
        
    - name: Build success message
      run: |
        echo "🎉 CATBUNTU FROM SCRATCH BUILT SUCCESSFULLY! 🐾"
        echo "📦 Final ISO size: $(ls -lh catbuntu-from-scratch.iso | awk '{print $5}')"
        echo "🐱 Features:"
        echo "  - Built from debootstrap"
        echo "  - Custom kernel"
        echo "  - Auto-login to fish shell"
        echo "  - All cat-themed commands"
        echo "  - Purr-fect terminal experience!"
        echo "📥 Download from Actions artifacts!"
